swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transaction/{userId}:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get all user transactions
      description: Get all of one user transaction by passing the user id in the params
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: userId
          description: id of the concerned user
          required: true
          schema:
            type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieve successfully
          schema:
            $ref: "#/definitions/UserTransactions"
        "401":
          description: Unauthorized user
        "404":
          description: Unknown user id
        "500":
          description: Internal Server Error
  /transaction/{id}:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get one specific transaction
      description: Display one specific transaction depending on id
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: id of the concerned transaction
          required: true
          schema:
            type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction retrieve successfully
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized user
        "404":
          description: Could not retrieve data for this transaction id
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update one specific transaction
      description: Update Category and/or notes on one specific transaction depending on id
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: id of the concerned transaction
          required: true
          schema:
            type: string
        - in: body
          name: body
          description: update transaction attributes
          required: true
          schema:
            $ref: "#/definitions/UpdateTransaction"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized user
        "404":
          description: no transaction found with this id
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: transaction id
      date:
        type: string
        description: transaction date
      description:
        type: string
        description: transaction desciption
      amount:
        type: number
        description: transaction amount
      balance:
        type: number
        description: transaction balance
      transactionType:
        type: string
        description: transaction type
      category:
        type: string
        description: transaction category
      notes:
        type: string
        description: transaction description
  UserTransactions:
    type: array
    items:
      $ref: "#/definitions/Transaction"
  UpdateTransaction:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
